---
import { getLangFromUrl, useTranslations } from '../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<section class="py-16 bg-gray-50">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="lg:text-center mb-12">
      <h2 class="text-base text-primary-600 font-semibold tracking-wide uppercase">{t('video.subtitle')}</h2>
      <p class="mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl">{t('video.title')}</p>
      <p class="mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto">{t('video.description')}</p>
    </div>
    
    <div id="video-container" class="relative mx-auto max-w-3xl rounded-xl shadow-xl overflow-hidden bg-gray-900 border border-gray-700">
      <!-- 视频标题栏 -->
      <div class="bg-gray-800 px-4 py-2 flex items-center justify-between">
        <div class="flex items-center">
          <div class="w-3 h-3 rounded-full bg-red-500 mr-2"></div>
          <div class="w-3 h-3 rounded-full bg-yellow-500 mr-2"></div>
          <div class="w-3 h-3 rounded-full bg-green-500 mr-2"></div>
          <span class="text-white text-sm font-medium ml-2">Terminal Agent Demo</span>
        </div>
        <div class="flex items-center">
          <button id="fullscreen-btn" class="text-gray-300 hover:text-white mr-3" aria-label="全屏">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5v-4m0 4h-4m4 0l-5-5" />
            </svg>
          </button>
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-red-500" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z" clip-rule="evenodd" />
          </svg>
        </div>
      </div>
      
      <!-- YouTube视频 -->
      <div id="video-wrapper" class="aspect-w-16 aspect-h-9 max-h-[500px]">
        <iframe 
          id="youtube-iframe"
          class="w-full h-full" 
          src="https://www.youtube.com/embed/NlpvRfUFGYY?rel=0&showinfo=0&controls=1&autoplay=0&enablejsapi=1" 
          title="Terminal Agent Demo" 
          frameborder="0" 
          allow="accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture; fullscreen" 
          allowfullscreen
        ></iframe>
      </div>
      
      <!-- 视频控制栏 -->
      <div class="bg-gray-800 px-4 py-2 flex items-center justify-between">
        <div class="text-gray-300 text-xs">{t('video.title')}</div>
        <div class="flex items-center">
          <button id="play-btn" class="text-primary-400 hover:text-primary-300 text-xs flex items-center mr-4">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z" clip-rule="evenodd" />
            </svg>
            播放
          </button>
          <a href="https://www.youtube.com/watch?v=NlpvRfUFGYY" target="_blank" rel="noopener noreferrer" class="text-primary-400 hover:text-primary-300 text-xs flex items-center">
            在YouTube上观看
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" viewBox="0 0 20 20" fill="currentColor">
              <path d="M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5z" />
              <path d="M5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z" />
            </svg>
          </a>
        </div>
      </div>
    </div>
    
    <div class="mt-10">
      <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div class="bg-white p-6 rounded-lg shadow">
          <h3 class="text-lg font-medium text-gray-900 mb-2">{t('video.demos.diagnostic.title')}</h3>
          <p class="text-gray-500 mb-4">{t('video.demos.diagnostic.description')}</p>
          <a href="/blog/system-diagnostics" class="text-primary-600 hover:text-primary-800 font-medium">{t('video.demos.diagnostic.cta')}</a>
        </div>
        
        <div class="bg-white p-6 rounded-lg shadow">
          <h3 class="text-lg font-medium text-gray-900 mb-2">{t('video.demos.scripts.title')}</h3>
          <p class="text-gray-500 mb-4">{t('video.demos.scripts.description')}</p>
          <a href="/blog/automation-scripts" class="text-primary-600 hover:text-primary-800 font-medium">{t('video.demos.scripts.cta')}</a>
        </div>
        
        <div class="bg-white p-6 rounded-lg shadow">
          <h3 class="text-lg font-medium text-gray-900 mb-2">{t('video.demos.deployment.title')}</h3>
          <p class="text-gray-500 mb-4">{t('video.demos.deployment.description')}</p>
          <a href="/blog/environment-deployment" class="text-primary-600 hover:text-primary-800 font-medium">{t('video.demos.deployment.cta')}</a>
        </div>
      </div>
    </div>
    
    <div class="mt-10 text-center">
      <p class="text-lg text-gray-600">{t('video.ready')}</p>
      <div class="mt-5">
        <a 
          href="https://github.com/SagesAi/terminal-agent" 
          class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700"
        >
          {t('video.startNow')}
        </a>
      </div>
    </div>
  </div>
</section>

<script>
  // 等待DOM加载完成
  document.addEventListener('DOMContentLoaded', () => {
    const videoContainer = document.getElementById('video-container');
    const fullscreenBtn = document.getElementById('fullscreen-btn');
    const playBtn = document.getElementById('play-btn');
    const iframe = document.getElementById('youtube-iframe');
    
    // 全屏功能
    if (fullscreenBtn) {
      fullscreenBtn.addEventListener('click', () => {
        if (!document.fullscreenElement) {
          if (videoContainer.requestFullscreen) {
            videoContainer.requestFullscreen();
          } else if (videoContainer.webkitRequestFullscreen) { /* Safari */
            videoContainer.webkitRequestFullscreen();
          } else if (videoContainer.msRequestFullscreen) { /* IE11 */
            videoContainer.msRequestFullscreen();
          }
        } else {
          if (document.exitFullscreen) {
            document.exitFullscreen();
          } else if (document.webkitExitFullscreen) { /* Safari */
            document.webkitExitFullscreen();
          } else if (document.msExitFullscreen) { /* IE11 */
            document.msExitFullscreen();
          }
        }
      });
    }
    
    // 播放按钮功能
    if (playBtn) {
      playBtn.addEventListener('click', () => {
        // 使用postMessage API控制YouTube视频
        iframe.contentWindow.postMessage('{"event":"command","func":"playVideo","args":""}', '*');
      });
    }
    
    // 监听全屏变化事件
    document.addEventListener('fullscreenchange', handleFullscreenChange);
    document.addEventListener('webkitfullscreenchange', handleFullscreenChange);
    document.addEventListener('mozfullscreenchange', handleFullscreenChange);
    document.addEventListener('MSFullscreenChange', handleFullscreenChange);
    
    function handleFullscreenChange() {
      if (document.fullscreenElement || 
          document.webkitFullscreenElement || 
          document.mozFullScreenElement ||
          document.msFullscreenElement) {
        videoContainer.classList.add('fullscreen-mode');
      } else {
        videoContainer.classList.remove('fullscreen-mode');
      }
    }
  });
</script>

<style>
  /* 全屏模式样式 */
  .fullscreen-mode {
    width: 100vw !important;
    height: 100vh !important;
    max-width: none !important;
    border-radius: 0 !important;
  }
  
  .fullscreen-mode .aspect-w-16 {
    height: calc(100vh - 72px) !important; /* 减去头部和底部控制栏的高度 */
  }
  
  /* 添加按钮悬停效果 */
  #fullscreen-btn:hover, #play-btn:hover {
    transform: scale(1.1);
    transition: transform 0.2s ease;
  }
  
  /* 优化视频容器比例 */
  #video-container {
    width: 90%;
    max-width: 800px;
    margin: 0 auto;
  }
  
  #video-wrapper {
    height: 0;
    padding-bottom: 56.25%; /* 16:9的比例 */
    position: relative;
    overflow: hidden;
  }
  
  #video-wrapper iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #000;
  }
  
  /* 响应式调整 */
  @media (max-width: 768px) {
    #video-container {
      width: 95%;
    }
  }
</style>
